version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:5.0
    container_name: kervan-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: kervan-ecommerce
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - kervan-network

  # Redis (for sessions and caching)
  redis:
    image: redis:7-alpine
    container_name: kervan-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kervan-network

  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kervan-api
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/kervan-ecommerce?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-production-jwt-secret-change-this
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      FRONTEND_URL: http://localhost:3000
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - kervan-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: kervan-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./client/build:/usr/share/nginx/html:ro
    depends_on:
      - api
    networks:
      - kervan-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  kervan-network:
    driver: bridge
