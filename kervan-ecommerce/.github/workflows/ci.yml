name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    services:
      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install backend dependencies
      run: npm ci

    - name: Install frontend dependencies
      run: |
        cd client
        npm ci

    - name: Create test environment file
      run: |
        echo "NODE_ENV=test" > .env
        echo "MONGODB_URI=mongodb://localhost:27017/kervan-test" >> .env
        echo "JWT_SECRET=test-jwt-secret-key" >> .env
        echo "EMAIL_USER=test@example.com" >> .env
        echo "EMAIL_PASS=testpassword" >> .env
        echo "FRONTEND_URL=http://localhost:3000" >> .env

    - name: Run backend linting
      run: npm run lint --if-present

    - name: Run backend tests
      run: npm test --if-present
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/kervan-test

    - name: Run frontend tests
      run: |
        cd client
        npm test -- --coverage --watchAll=false
      env:
        CI: true

    - name: Build frontend
      run: |
        cd client
        npm run build

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level high

    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  build:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install frontend dependencies
      run: |
        cd client
        npm ci

    - name: Build application
      run: |
        cd client
        npm run build

    - name: Create deployment artifact
      run: |
        tar -czf kervan-ecommerce.tar.gz \
          --exclude=node_modules \
          --exclude=client/node_modules \
          --exclude=.git \
          --exclude=coverage \
          --exclude=.env \
          .

    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: kervan-ecommerce-build
        path: kervan-ecommerce.tar.gz
        retention-days: 30

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: kervan-ecommerce-build

    - name: Deploy to production
      run: |
        echo "Deployment step would go here"
        echo "This could include:"
        echo "- Deploying to cloud provider (AWS, Heroku, etc.)"
        echo "- Updating Docker containers"
        echo "- Running database migrations"
        echo "- Updating environment variables"
        # Add your actual deployment commands here
